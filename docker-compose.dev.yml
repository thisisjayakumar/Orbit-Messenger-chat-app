services:
  postgres:
    image: postgres:15
    container_name: chat-postgres
    environment:
      POSTGRES_DB: chat_db
      POSTGRES_USER: chat_user
      POSTGRES_PASSWORD: chat_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:7-alpine
    container_name: chat-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  emqx:
    image: emqx/emqx:5.3
    container_name: chat-emqx
    ports:
      - "1883:1883"    # MQTT
      - "8083:8083"    # MQTT over WebSocket
      - "8084:8084"    # MQTT over WSS
      - "18083:18083"  # Dashboard
    environment:
      EMQX_NAME: emqx
      EMQX_HOST: 127.0.0.1
    volumes:
      - emqx_data:/opt/emqx/data

  minio:
    image: minio/minio:latest
    container_name: chat-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  opensearch:
    image: opensearchproject/opensearch:2.11.0
    container_name: chat-opensearch
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    ports:
      - "9200:9200"

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: chat-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/chat_db
      KC_DB_USERNAME: chat_user
      KC_DB_PASSWORD: chat_password
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
    ports:
      - "8090:8080"
    depends_on:
      - postgres
    command: start-dev

  # Go Services
  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    container_name: orbit-auth-service
    ports:
      - "8080:8000"
      - "9090:9090"
    volumes:
      - ./auth-service/configs:/app/configs
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
      - keycloak
    environment:
      - CONFIG_PATH=/app/configs/config.yaml
      - KEYCLOAK_URL=http://keycloak:8080
      - DATABASE_URL=postgres://chat_user:chat_password@postgres:5432/chat_db?sslmode=disable
    restart: unless-stopped

  message-service:
    build:
      context: .
      dockerfile: message-service/Dockerfile
    container_name: orbit-message-service
    ports:
      - "8001:8001"
      - "9091:9091"
    volumes:
      - ./message-service/configs:/app/configs
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
      - emqx
      - auth-service
    environment:
      - CONFIG_PATH=/app/configs/config.yaml
      - DATABASE_URL=postgres://chat_user:chat_password@postgres:5432/chat_db?sslmode=disable
      - MQTT_BROKER_URL=tcp://emqx:1883
      - MQTT_USERNAME=message_service
      - MQTT_PASSWORD=message_service_password
      - PORT=8001
    restart: unless-stopped

  presence-service:
    build:
      context: .
      dockerfile: presence-service/Dockerfile
    container_name: orbit-presence-service
    ports:
      - "8002:8002"
      - "9002:9002"
    volumes:
      - ./presence-service/configs:/app/configs
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
      - emqx
    environment:
      - CONFIG_PATH=/app/configs/config.yaml
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=
      - MQTT_BROKER_URL=tcp://emqx:1883
      - MQTT_USERNAME=presence_service
      - MQTT_PASSWORD=presence_service_password
      - PORT=8002
    restart: unless-stopped

  chat-api:
    build:
      context: .
      dockerfile: chat-api/Dockerfile
    container_name: orbit-chat-api
    ports:
      - "8003:8003"
      - "9003:9003"
    volumes:
      - ./chat-api/configs:/app/configs
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
      - auth-service
      - message-service
      - presence-service
      - media-service
    environment:
      - CONFIG_PATH=/app/configs/config.yaml
      - DATABASE_URL=postgres://chat_user:chat_password@postgres:5432/chat_db?sslmode=disable
      - MQTT_BROKER_URL=tcp://emqx:1883
      - MQTT_USERNAME=chat_api
      - MQTT_PASSWORD=chat_api_password
      - PORT=8003
    restart: unless-stopped

  media-service:
    build:
      context: .
      dockerfile: media-service/Dockerfile
    container_name: orbit-media-service
    ports:
      - "8004:8004"
      - "9004:9004"
    volumes:
      - ./media-service/configs:/app/configs
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
      - minio
    environment:
      - CONFIG_PATH=/app/configs/config.yaml
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - MINIO_BUCKET=chat-attachments
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  emqx_data:
  minio_data:
  opensearch_data: